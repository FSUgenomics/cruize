#!/usr/bin/env bash

usage() {
  echo "Usage: $(basename $0) [-b]" 1>&2
  echo "" 1>&2
  echo "  -b        start blat container locally"
  exit 1
}

################################
### PARSE COMMAND LINE ARGS ####
################################

while getopts ":i:b" opt; do
  case $opt in
  b)
   RUNBLAT=1
   ;;
  \?)
   echo "Invalid option: -$OPTARG" >&2
   usage
   ;;
  [?])
   usage
   ;;
  :)
   echo "Option -$OPTARG requires an argument." >&2
   echo "" >&2
   usage
   ;;
  esac
done

shift $((OPTIND-1))


docker network create cruize_nw

# start database container

docker run --rm -d \
 --name cruize_sql \
 -h cruize_sql \
 --env-file browser_config \
 -v $(pwd)/sql:/var/lib/mysql \
 -v $(pwd)/cruize_scripts:/usr/local/bin \
 --network cruize_nw \
 vera/cruize_sql



# start webserver container

docker run --rm -d \
 -p 80:80 \
 -p 443:443 \
 --name cruize_www \
 -h cruize_www \
 --env-file browser_config \
 -v $(pwd)/gbdb:/gbdb:ro \
 -v $(pwd)/cruize_scripts:/usr/local/bin \
 --network cruize_nw \
 vera/cruize_www



 # run blat container to update
if [ $RUNBLAT -eq 1 ]; then
  docker run --rm -it \
    --name cruize_blat \
    -h cruize_blat \
    --env-file browser_config \
    -v $(pwd)/gbdb:/gbdb \
    -v $(pwd)/cruize_scripts:/usr/local/bin \
    --network cruize_nw \
    vera/cruize_blat \
    update_blat
fi


# run admin container to update
 docker run --rm -it \
  --name cruize_admin \
  -h cruize_admin \
  --env-file browser_config \
  -v $(pwd)/gbdb:/gbdb \
  -v $(pwd)/cruize_scripts:/usr/local/bin \
  --network cruize_nw \
  vera/cruize_admin \
  update_browser
  
  
  
  
